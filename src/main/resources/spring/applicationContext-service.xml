<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
          init-method="init" destroy-method="shutdownForce">
        <constructor-arg>
            <props>
                <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="atomikosTransactionManager"
          class="com.atomikos.icatch.jta.UserTransactionManager"
          depends-on="userTransactionService"
          init-method="init" destroy-method="close" >
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" >
        <property name="transactionTimeout" value="300"/>
    </bean>

    <!-- ================== jta distribution transaction ================== -->

    <!-- 分布式事务 -->
    <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>

    <!-- 消息转换器MessageConverter -->
    <bean id="emailMessageConverter" class="com.coderbike.activemq.message_converter.EmailMessageConverter" />

    <!-- 注解控制事务 -->
    <tx:annotation-driven transaction-manager="jtaTransactionManager" />

    <!-- ================== activemq xa ==================== -->

    <!-- ================== producer ==================== -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsXaConnectionFactory"/>
        <property name="receiveTimeout" value="2000" />
        <property name="defaultDestination" ref="queueDestination"/>
        <!--<property name="messageConverter" ref="emailMessageConverter" />-->
    </bean>

    <!-- connection factory -->
    <bean id="jmsXaConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="${activemq.brokerURL}" />
        <property name="userName" value="${activemq.username}" />
        <property name="password" value="${activemq.password}" />
    </bean>

    <!-- queue destination -->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>queue</value>
        </constructor-arg>
    </bean>

    <!-- MessageListener -->
    <bean id="consumerMessageListener" class="com.coderbike.activemq.spirng_jms.ConsumerMessageListener" />

    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsXaConnectionFactory" />
        <property name="destination" ref="queueDestination" />
        <property name="messageListener" ref="consumerMessageListener" />
        <!-- 开启事务 -->
        <!--<property name="sessionTransacted" value="true" />-->
        <!-- 配置事务管理器，则sessionTransacted失效 -->
        <property name="transactionManager" ref="jtaTransactionManager" />
    </bean>
</beans>